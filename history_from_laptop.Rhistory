heights = rnorm(10,mean=188,sd=3)
heights
args(dnorm)
normalDensity = dnorm(x,mean=0,sd=1)
x = seq(from=-5,to=5,length=10)
normalDensity = dnorm(x,mean=0,sd=1)
round(normalDensity,2)
normalDensity
args(dbinom)
args(dbinom)
x = seq(0,10,by=1)
binomialDensity = dbinom(x,size=10,prob=0.5)
round(binomialDensity,2)
heights = rnorm(10,mean=188,sd=3)
heights
round(heights,2)
sample(heights,size=10,replace=TRUE)
sample(heights,size=20,replace=FALSE)
sample(heights,size=5,replace=FALSE)
sample(heights,size=10,replace=TRUE)
sample(heights,size=5,replace=FALSE)
set.seed(12345)
rnorm(5,mean=0,sd=1)
library(kernlab)
library(kernlab)
install.packages("kernlab")
getpwd()
getwd()
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl,destfile="./data/cameras.csv",method="curl")
download.file(fileUrl,destfile="./data/cameras.csv") #,method="curl")
setwd("./data")
setwd("./data")
#download.file("https://data.baltimorecity.gov/Transportation/Baltimore-Fixed-Speed-Cameras/dz54-2aru")
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl,destfile="./data/cameras.csv") #,method="curl")
getwd()
setwd("../")
getwd()
download.file(fileUrl,destfile="./data/cameras.csv") #,method="curl")
list.files("./data")
dateDownloaded <- date()
dateDownloaded
cameraData <- read.table("./data/cameras.csv")
head(cameraData)
list.files("./data")
cameraData <- read.table("./data/cameras.csv")
head(cameraData)
cameraData <- read.table("./data/cameras.csv",sep=",",header=TRUE)
head(cameraData)
library(xlsx)
install.packages("xlsx")
library(xlsx)
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.xlsx?accessType=DOWNLOAD"
download.file(fileUrl,destfile="./data/camera.xlsx",method="curl")
cameraData <- read.xlsx2("./data/camera.xlsx",sheetIndex=1)
library(xlsx)
file.choose()
library(XML)
install.packages("XML")
library(XML)
library(XML)
package.contents
package.contents(XML)
library.dynam(XML)\
library.dynam(XML)
library("XML", lib.loc="C:/Users/jean.CLINOVO/Documents/R/win-library/2.15")
library(XML)
q()
list.files("./data")
install.packages("knitr")
library("knitr", lib.loc="C:/Users/jean.CLINOVO/Documents/R/win-library/2.15")
cameraData <- read.table("./data/cameras.csv")
head(cameraData)
getpw()
getwd()
cameraData <- read.table("./data/cameras.csv",sep=",",header=TRUE)
head(cameraData)
library(xlsx)
library("xlsx", lib.loc="C:/Users/jean.CLINOVO/Documents/R/win-library/2.15")
cameraData <- read.csv(file.choose())
library(kernlab)
data (spam)
dim(spam)
data (spam)
dim(spam)
n=dim(spam)[1,]
n=dim(spam)[0]
n
n=dim(spam)
n
n[1]
n=dim(spam)[1]
n
a=n
a
a=3
a
a<-3
a
set.seed(3435)
trainI=rbinom(n)
trainI=rbinom(n,size=1,prob=.5)
table(trainI)
rbimon
?rbimon
?rbinom
n <- 2000
k <- seq(0, n, by = 20)
plot (k, dbinom(k, n, pi/10, log=TRUE), type='l', ylab="log density",
main = "dbinom(*, log=TRUE) is better than  log(dbinom(*))")
args(rbinom)
rbinom(10,1,.5)
rbinom(10,2,.5)
rbinom(10,3,.5)
rbinom(10,3,.3)
rbinom(10,10,.3)
rbinom(10,10,.5)
rbinom(10,1,.5)
dbinom(seq(10),10,.5)
round(dbinom(seq(10),10,.5))
round(dbinom(,10,.5))
seq(10)
round(dbinom(seq(10),10,.5))
round(dbinom(seq(10),10,.5),2)
round(dbinom(seq(10),1,.5),2)
set.seed(3435)
trainI=rbinom(n,size=1,prob=.5)
table(trainI)
?table
margin.table(trainI)
ftable(trainI)
set.seed(3435)
trainI=rbinom(n,size=1,prob=.5)
table(trainI)
?table
library(kernlab)
data (spam)
dim(spam)
n=dim(spam)[1]
n
# training set
set.seed(3435)
trainI=rbinom(n,size=1,prob=.5)
table(trainI)
trainSpam=spam[trainI==1,]
trainHam=spam[trainI==0,]
dim(trainHam)
dim(trainSpam)
length(trainSPAM)
length(trainSpam)
?dim
dmnames(trainHam)
dimnames(trainHam)
dimnames(trainHam[1,])
dimnames(trainHam[0,])
dimnames(trainHam[1])
dimnames(trainHam[,1])
dimnames(trainHam[1,])
ncol(trainSpam)
nrow(trainSpam)
nrow(trainSpam)
dim(trainSpam)
dim(spam)
dim(trainHam)
dim(trainSpam)
dim(trainI)
length(trainI)
?vextor
?vector
names(trainSpam)
?names
names(trainSpam)
head(trainSpam)
table(trainSpam$type)
plot(trainSpam$capitalAve ~ trainS$type)
plot(trainSpam$capitalAve ~ trainSpam$type)
plot(trainSpam$capitalAve ~ trainSpam$type)
plot(log10(trainSpam$capitalAve) ~ trainSpam$type)
plot(log(trainSpam$capitalAve) ~ trainSpam$type)
plot(log(trainSpam$capitalAve) ~ trainSpam$type)
plot(log10(trainSpam$capitalAve) ~ trainSpam$type)
plot(log10(trainSpam$capitalAve+1) ~ trainSpam$type)
table(trainSpam$type)
dim(trainSpam$type)
length(trainSpam$type)
plot(log10(trainSpam[,1:4]+1))
names(trainSpam)
plot(hC)
hC=hclust(dist(t(trainSpam[,1:57])))
plot(hC)
hC=hclust(dist(t(trainSpam[,1:4])))
plot(hC)
?hclust
?hcl
hC=hclust(dist(t(trainSpam[,1:4])))
?t
?dist
hC=hclust(dist(t(log10(trainSpam[,1:4]+1)))
plot(hC)
hC=hclust(dist(t(log10(trainSpam[,1:4]+1))))
plot(hC)
hC=hclust(dist(t(log10(trainSpam[,1:14]+1))))
plot(hC)
hC=hclust(dist(t(log10(trainSpam[,1:55]+1))))
plot(hC)
?predict
savehistory("~/R/coursera/history_from_laptop.Rhistory")
